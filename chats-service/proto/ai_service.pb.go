// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.12.4
// source: ai_service.proto

package inference

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PredictRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         string                 `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictRequest) Reset() {
	*x = PredictRequest{}
	mi := &file_ai_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictRequest) ProtoMessage() {}

func (x *PredictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictRequest.ProtoReflect.Descriptor instead.
func (*PredictRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{0}
}

func (x *PredictRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type PredictReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PredictReply) Reset() {
	*x = PredictReply{}
	mi := &file_ai_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictReply) ProtoMessage() {}

func (x *PredictReply) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictReply.ProtoReflect.Descriptor instead.
func (*PredictReply) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{1}
}

func (x *PredictReply) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

var File_ai_service_proto protoreflect.FileDescriptor

const file_ai_service_proto_rawDesc = "" +
	"\n" +
	"\x10ai_service.proto\x12\tinference\"&\n" +
	"\x0ePredictRequest\x12\x14\n" +
	"\x05input\x18\x01 \x01(\tR\x05input\"&\n" +
	"\fPredictReply\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output2J\n" +
	"\tInference\x12=\n" +
	"\aPredict\x12\x19.inference.PredictRequest\x1a\x17.inference.PredictReplyB9Z7github.com/Bipul-Dubey/ai-knowledgebase/proto;inferenceb\x06proto3"

var (
	file_ai_service_proto_rawDescOnce sync.Once
	file_ai_service_proto_rawDescData []byte
)

func file_ai_service_proto_rawDescGZIP() []byte {
	file_ai_service_proto_rawDescOnce.Do(func() {
		file_ai_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)))
	})
	return file_ai_service_proto_rawDescData
}

var file_ai_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ai_service_proto_goTypes = []any{
	(*PredictRequest)(nil), // 0: inference.PredictRequest
	(*PredictReply)(nil),   // 1: inference.PredictReply
}
var file_ai_service_proto_depIdxs = []int32{
	0, // 0: inference.Inference.Predict:input_type -> inference.PredictRequest
	1, // 1: inference.Inference.Predict:output_type -> inference.PredictReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ai_service_proto_init() }
func file_ai_service_proto_init() {
	if File_ai_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_service_proto_goTypes,
		DependencyIndexes: file_ai_service_proto_depIdxs,
		MessageInfos:      file_ai_service_proto_msgTypes,
	}.Build()
	File_ai_service_proto = out.File
	file_ai_service_proto_goTypes = nil
	file_ai_service_proto_depIdxs = nil
}
